<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:jee="http://www.springframework.org/schema/jee"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.8.xsd"
       default-lazy-init="true">
    <description>Spring公共配置 </description>

    <context:component-scan base-package="com.channelsoft">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller" />
        <context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp">
        <property name="transactionTimeout" value="300" />
    </bean>

    <bean id="atomikosTransactionManager" class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true" />
    </bean>

    <bean id="transactionManager" class="org.springframework.transaction.jta.JtaTransactionManager">
        <property name="transactionManager" ref="atomikosTransactionManager" />
        <property name="userTransaction" ref="atomikosUserTransaction" />
        <property name="allowCustomIsolationLevels" value="true" />
    </bean>

    <tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />

    <!-- 定义aspectj -->
    <aop:aspectj-autoproxy proxy-target-class="true" />

    <bean id="mysqlHibernateJpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <value>org.hibernate.dialect.MySQL5InnoDBDialect</value>
        </property>
        <property name="showSql">
            <value>true</value>
        </property>
        <property name="generateDdl">
            <value>false</value>
        </property>
    </bean>
    <bean id="oracleHibernateJpaVendorAdapter"
          class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
        <property name="databasePlatform">
            <value>org.hibernate.dialect.Oracle10gDialect</value>
        </property>
        <property name="showSql">
            <value>true</value>
        </property>
        <property name="generateDdl">
            <value>false</value>
        </property>
    </bean>

    <!-- 第一个配置， Jpa Entity Manager 配置 -->
    <!--<bean id="mysqlEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
    <!--<property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />-->
    <!--<property name="persistenceUnitName" value="mysqlPU" />-->
    <!--<property name="dataSource" ref="mysqlDataSource" />-->
    <!--<property name="jpaVendorAdapter" ref="mysqlHibernateJpaVendorAdapter" />-->
    <!--<property name="packagesToScan" value="com.channelsoft.apiplus" />-->
    <!--<property name="jpaProperties">-->
    <!--&lt;!&ndash;<props>&ndash;&gt;-->
    <!--&lt;!&ndash;<prop key="hibernate.format_sql">true</prop>&ndash;&gt;-->
    <!--&lt;!&ndash;<prop key="hibernate.connection.driver_class">com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</prop>&ndash;&gt;-->
    <!--&lt;!&ndash;<prop key="hibernate.current_session_context_class">jta</prop>&ndash;&gt;-->
    <!--&lt;!&ndash;<prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>&ndash;&gt;-->
    <!--&lt;!&ndash;</props>&ndash;&gt;-->

    <!--<props>-->
    <!--&lt;!&ndash; BEGIN Atomikos &ndash;&gt;-->
    <!--<prop key="hibernate.transaction.factory_class">org.hibernate.engine.transaction.internal.jta.CMTTransactionFactory</prop>-->
    <!--&lt;!&ndash; The following line is what's used in Hibernate 4 instead of a TransactionManagerLookup class &ndash;&gt;-->
    <!--<prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>-->
    <!--&lt;!&ndash; END Atomikos &ndash;&gt;-->
    <!--<prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQLDialect</prop>-->
    <!--<prop key="hibernate.cache.provider_class">org.hibernate.cache.NoCacheProvider</prop>-->
    <!--<prop key="hibernate.connection.autocommit">false</prop>-->
    <!--<prop key="hibernate.hbm2ddl.auto">none</prop>-->
    <!--<prop key="hibernate.show_sql">true</prop>-->
    <!--<prop key="hibernate.format_sql">true</prop>-->
    <!--<prop key="hibernate.use_sql_comments">false</prop>-->
    <!--<prop key="hibernate.generate_statistics">false</prop>-->
    <!--<prop key="hibernate.connection.release_mode">after_statement</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <bean id="mysqlEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />
        <property name="persistenceUnitName" value="mysqlPU" />
        <property name="dataSource" ref="mysqlDataSource" />
        <property name="jpaVendorAdapter" ref="mysqlHibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="com.channelsoft.apiplus.entity.mysql" />
        <property name="jpaProperties">
            <props>
                <!-- 不开启二级缓存 -->
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.generate_statistics">false</prop>
                <prop key="hibernate.connection.release_mode">after_statement</prop>
                <!-- 命名规则 My_NAME->MyName -->
                <prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.hbm2ddl.auto">none</prop>
                <prop key="hibernate.connection.driver_class">com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>
            </props>
        </property>
    </bean>


    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.channelsoft.apiplus.repository.mysql"
                      transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="mysqlEntityManagerFactory" />

    <!--<bean id="oracleEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">-->
    <!--<property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />-->
    <!--<property name="persistenceUnitName" value="oraclePU" />-->
    <!--<property name="dataSource" ref="oracleDataSource" />-->
    <!--<property name="jpaVendorAdapter" ref="oracleHibernateJpaVendorAdapter" />-->
    <!--<property name="packagesToScan" value="com.channelsoft.apiplus.entity.oracle" />-->
    <!--<property name="jpaProperties">-->
    <!--<props>-->
    <!--&lt;!&ndash; 不开启二级缓存 &ndash;&gt;-->
    <!--<prop key="hibernate.cache.use_second_level_cache">false</prop>-->
    <!--<prop key="hibernate.generate_statistics">false</prop>-->
    <!--<prop key="hibernate.connection.release_mode">after_statement</prop>-->
    <!--&lt;!&ndash; 命名规则 My_NAME->MyName &ndash;&gt;-->
    <!--<prop key="hibernate.ejb.naming_strategy">org.hibernate.cfg.ImprovedNamingStrategy</prop>-->
    <!--<prop key="hibernate.format_sql">true</prop>-->
    <!--<prop key="hibernate.hbm2ddl.auto">none</prop>-->
    <!--<prop key="hibernate.connection.driver_class">oracle.jdbc.driver.OracleDriver</prop>-->
    <!--<prop key="hibernate.current_session_context_class">jta</prop>-->
    <!--&lt;!&ndash;<prop key="hibernate.temp.use_jdbc_metadata_defaults">false</prop>&ndash;&gt;-->
    <!--<prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->
    <!-- Jpa Entity Manager 配置 -->
    <bean id="oracleEntityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="persistenceXmlLocation" value="classpath*:/persistence.xml" />
        <property name="persistenceUnitName" value="oraclePU2" />
        <property name="dataSource" ref="oracleDataSource" />
        <property name="jpaVendorAdapter" ref="oracleHibernateJpaVendorAdapter" />
        <property name="packagesToScan" value="com.channelsoft.apiplus.entity.oracle" />
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.format_sql">true</prop>
                <prop key="hibernate.connection.driver_class">oracle.jdbc.xa.client.OracleXADataSource</prop>
                <prop key="hibernate.current_session_context_class">jta</prop>
                <prop key="hibernate.transaction.manager_lookup_class">com.atomikos.icatch.jta.hibernate3.TransactionManagerLookup
                </prop>
            </props>
        </property>
    </bean>


    <!-- Spring Data Jpa配置 -->
    <jpa:repositories base-package="com.channelsoft.apiplus.repository.oracle"
                      transaction-manager-ref="transactionManager"
                      entity-manager-factory-ref="oracleEntityManagerFactory" />


    <context:property-placeholder
            ignore-unresolvable="true" location="classpath*:/application.properties" />

    <!-- 第一个配置，mysql 数据源配置，保存的时候报错 -->
    <bean id="mysqlDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="mysqlXADBMS" />
        <property name="xaDataSourceClassName" value="com.mysql.jdbc.jdbc2.optional.MysqlXADataSource" />
        <property name="xaProperties">
            <props>
                <prop key="user">root</prop>
                <prop key="password">root</prop>
                <!--<prop key="URL">jdbc:mysql://127.0.0.1:3306/test1</prop>-->
                <prop key="URL">jdbc:mysql://127.0.0.1:3306/test1?pinGlobalTxToPhysicalConnection=true</prop>
            </props>
        </property>
        <property name="poolSize" value="2" />
        <property name="minPoolSize" value="1" />
        <property name="maxPoolSize" value="5" />
        <property name="testQuery" value="select 1" />
    </bean>







    <!-- 第二个配置， mysql 的连接池配置（正常运行，但是不提交） -->
    <!--<bean id="mysqlDataSource" class="com.alibaba.druid.pool.DruidDataSource"-->
    <!--init-method="init" destroy-method="close">-->
    <!--&lt;!&ndash; 基本属性 url、user、password &ndash;&gt;-->
    <!--<property name="url" value="jdbc:mysql://127.0.0.1:3306/test1" />-->
    <!--&lt;!&ndash;<property name="url" value="jdbc:mysql://112.74.59.99:3306/test1" />&ndash;&gt;-->
    <!--<property name="username" value="root" />-->
    <!--<property name="password" value="root" />-->

    <!--&lt;!&ndash; 配置初始化大小、最小、最大 &ndash;&gt;-->
    <!--<property name="initialSize" value="5" />-->
    <!--<property name="minIdle" value="5" />-->
    <!--<property name="defaultAutoCommit" value="false" />-->

    <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
    <!--<property name="maxWait" value="60000" />-->

    <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
    <!--<property name="timeBetweenEvictionRunsMillis" value="60000" />-->

    <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
    <!--<property name="minEvictableIdleTimeMillis" value="300000" />-->

    <!--<property name="validationQuery" value="SELECT 'x'" />-->
    <!--<property name="testWhileIdle" value="true" />-->
    <!--<property name="testOnBorrow" value="false" />-->
    <!--<property name="testOnReturn" value="false" />-->

    <!--&lt;!&ndash; 打开PSCache，并且指定每个连接上PSCache的大小 &ndash;&gt;-->
    <!--<property name="poolPreparedStatements" value="false" />-->
    <!--<property name="maxPoolPreparedStatementPerConnectionSize"-->
    <!--value="20" />-->

    <!--&lt;!&ndash; 配置监控统计拦截的filters &ndash;&gt;-->
    <!--<property name="filters" value="stat" />-->
    <!--</bean>-->

    <!--第三个数据源配置方法，save的时候报错-->
    <!--<bean id="abstractXADataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean" init-method="init" destroy-method="close" abstract="true">-->
    <!--<property name="xaDataSourceClassName" value="com.alibaba.druid.pool.xa.DruidXADataSource"/>-->
    <!--<property name="poolSize" value="1" />-->
    <!--<property name="minPoolSize" value="1"/>-->
    <!--<property name="maxPoolSize" value="60"/>-->
    <!--&lt;!&ndash;获取连接失败重新获等待最大时间，在这个时间内如果有可用连接，将返回&ndash;&gt;-->
    <!--<property name="borrowConnectionTimeout" value="60"/>-->
    <!--&lt;!&ndash;最大获取数据时间，如果不设置这个值，Atomikos使用默认的5分钟，那么在处理大批量数据读取的时候，-->
    <!--一旦超过5分钟，就会抛出类似 Resultset is close 的错误.&ndash;&gt;-->
    <!--<property name="reapTimeout" value="1000"/>-->
    <!--&lt;!&ndash;最大闲置时间，超过最小连接池连接的连接将将关闭&ndash;&gt;-->
    <!--<property name="maxIdleTime" value="20"/>-->
    <!--&lt;!&ndash;连接回收时间&ndash;&gt;-->
    <!--<property name="maintenanceInterval" value="20"/>-->
    <!--&lt;!&ndash;java数据库连接池，最大可等待获取datasouce的时间&ndash;&gt;-->
    <!--<property name="loginTimeout" value="60"/>-->
    <!--<property name="testQuery" value="select 1"/>-->
    <!--</bean>-->
    <!--<bean id="mysqlDataSource" parent="abstractXADataSource">-->
    <!--<property name="uniqueResourceName" value="mysqlDataSource" />-->
    <!--<property name="xaProperties">-->
    <!--<props>-->
    <!--<prop key="driverClassName">org.gjt.mm.mysql.Driver</prop>-->
    <!--<prop key="url">jdbc:mysql://127.0.0.1:3306/test1?pinGlobalTxToPhysicalConnection=true</prop>-->
    <!--&lt;!&ndash;  <prop key="user">${jdbc.username}</prop> &ndash;&gt; &lt;!&ndash; mysql &ndash;&gt;-->
    <!--<prop key="username">root</prop>   &lt;!&ndash; durid &ndash;&gt;-->
    <!--<prop key="password">root</prop>-->
    <!--<prop key="initialSize">1</prop>-->
    <!--<prop key="maxActive">20</prop> &lt;!&ndash; 若不配置则代码执行"{dataSource-1} inited"此处停止  &ndash;&gt;-->
    <!--<prop key="minIdle">1</prop>-->
    <!--<prop key="maxWait">60000</prop>-->
    <!--<prop key="validationQuery">select 1</prop>-->
    <!--<prop key="testOnBorrow">true</prop>-->
    <!--<prop key="testOnReturn">true</prop>-->
    <!--<prop key="testWhileIdle">true</prop>-->
    <!--<prop key="removeAbandoned">true</prop>-->
    <!--<prop key="removeAbandonedTimeout">1800</prop>-->
    <!--<prop key="logAbandoned">true</prop>-->
    <!--<prop key="filters">mergeStat</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->
    <!--<bean id="oracleDataSource" parent="abstractXADataSource">-->
    <!--&lt;!&ndash; oracle的测试语句不一样,需要覆盖掉父类的,否则会测试不通误认为连接不可得&ndash;&gt;-->
    <!--<property name="testQuery" value="SELECT 1 FROM DUAL"/>-->
    <!--<property name="uniqueResourceName" value="oracle" />-->
    <!--<property name="xaProperties">-->
    <!--<props>-->
    <!--<prop key="driverClassName">oracle.jdbc.driver.OracleDriver</prop>-->
    <!--<prop key="url">jdbc:oracle:thin:@192.168.30.20:1521:ccpbs14</prop>-->
    <!--<prop key="password">ccod</prop>-->
    <!--&lt;!&ndash;  <prop key="user">${jdbc.username}</prop> &ndash;&gt; &lt;!&ndash; mysql &ndash;&gt;-->
    <!--<prop key="username">ccod</prop>   &lt;!&ndash; durid &ndash;&gt;-->
    <!--<prop key="initialSize">0</prop>-->
    <!--<prop key="maxActive">20</prop> &lt;!&ndash; 若不配置则代码执行"{dataSource-1} inited"此处停止  &ndash;&gt;-->
    <!--<prop key="minIdle">0</prop>-->
    <!--<prop key="maxWait">60000</prop>-->
    <!--<prop key="validationQuery">SELECT 1 FROM DUAL</prop>-->
    <!--<prop key="testOnBorrow">false</prop>-->
    <!--<prop key="testOnReturn">false</prop>-->
    <!--<prop key="testWhileIdle">true</prop>-->
    <!--<prop key="removeAbandoned">false</prop>-->
    <!--<prop key="removeAbandonedTimeout">1800</prop>-->
    <!--<prop key="logAbandoned">true</prop>-->
    <!--<prop key="filters">mergeStat,log4j</prop>-->
    <!--</props>-->
    <!--</property>-->
    <!--</bean>-->

    <bean id="oracleDataSource" class="com.atomikos.jdbc.AtomikosDataSourceBean"
          init-method="init" destroy-method="close">
        <property name="uniqueResourceName" value="oracleXADBMS" />
        <property name="xaDataSourceClassName" value="oracle.jdbc.xa.client.OracleXADataSource" />
        <property name="xaProperties">
            <props>
                <prop key="user">ccod</prop>
                <prop key="password">ccod</prop>
                <prop key="URL">jdbc:oracle:thin:@192.168.30.20:1521:ccpbs14</prop>
            </props>
        </property>
        <property name="poolSize" value="2" />
        <property name="minPoolSize" value="1" />
        <property name="maxPoolSize" value="5" />
        <property name="testQuery" value="select 1 from dual" />
    </bean>


</beans>